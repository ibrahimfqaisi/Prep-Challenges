{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Equality In An Array](https://www.hackerrank.com/challenges/equality-in-a-array/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', function() {\n    inputString = inputString.split('\\n');\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'equalizeArray' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts INTEGER_ARRAY arr as parameter.\n */\n\nfunction equalizeArray(arr) {\n  let i = 0;\n  let result = arr.reduce((acc, cur) => {\n    let key = cur;\n    acc[key] = (acc[key] || 0) + 1;\n    return acc;\n  }, {});\n\n  let c = Object.entries(result).reduce((acc, [key, value]) => {\n    if (value > i) {\n      i = value;\n      return i;\n    } else {\n      return i;\n    }\n  }, 0);\n\n  return(arr.length - c);\n}\n\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const n = parseInt(readLine().trim(), 10);\n\n    const arr = readLine().replace(/\\s+$/g, '').split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n    const result = equalizeArray(arr);\n\n    ws.write(result + '\\n');\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Halloween Sale](https://www.hackerrank.com/challenges/halloween-sale/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', function() {\n    inputString = inputString.split('\\n');\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'howManyGames' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER p\n *  2. INTEGER d\n *  3. INTEGER m\n *  4. INTEGER s\n */\n\nfunction howManyGames(p, d, m, s) {\n    // Return the number of games you can buy\n    // Return 0 if the budget is less than the minimum price\n  if (s < p) {\n    return 0;\n  }\n   let arr=[p];\n   let a=0\n   let k= p\n   let e=p\n for (let i=1;k-d>=m;i++){\n        a = i;\n        e+=k-d\n        k = k - d;\n   }\n   console.log(e)\n   \n   let f =Math.floor((s-e) / m);\n   console.log(f)\n\nfor (let i = 1; i <= a+f; i++) {\n  if (i<=a){\n      arr.push(p-d)\n      p=p-d\n  }\n  else{\n      arr.push(p-m)\n  }\n}\nconsole.log( arr.length)\nreturn arr.length\n}\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const firstMultipleInput = readLine().replace(/\\s+$/g, '').split(' ');\n\n    const p = parseInt(firstMultipleInput[0], 10);\n\n    const d = parseInt(firstMultipleInput[1], 10);\n\n    const m = parseInt(firstMultipleInput[2], 10);\n\n    const s = parseInt(firstMultipleInput[3], 10);\n\n    const answer = howManyGames(p, d, m, s);\n\n    ws.write(answer + '\\n');\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Sherlock And Squares](https://www.hackerrank.com/challenges/sherlock-and-squares/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}